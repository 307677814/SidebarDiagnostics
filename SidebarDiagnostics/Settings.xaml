<Window x:Class="SidebarDiagnostics.Settings"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-x:Namespace:SidebarDiagnostics"
        xmlns:monitor="clr-namespace:SidebarDiagnostics.Monitor"
        mc:Ignorable="d"
        Title="Sidebar Settings"
        Width="400"
        SizeToContent="Height"
        Icon="settings.ico"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <DataTemplate x:Key="MonitorConfigBool">
            <CheckBox Content="{Binding Path=Name}" IsChecked="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="0,5" />
        </DataTemplate>
    </Window.Resources>
    <StackPanel Orientation="Vertical">
        <TabControl Margin="10" Padding="15">
            <TabItem Header="General">
                <Grid Style="{StaticResource SettingGrid}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="38px"></RowDefinition>
                        <RowDefinition Height="38px"></RowDefinition>
                        <RowDefinition Height="38px"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Content="Dock" VerticalAlignment="Center" />
                    <ComboBox Grid.Column="1" Grid.Row="0" ItemsSource="{Binding Path=DockEdgeItems}" SelectedValue="{Binding Path=DockEdge, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" ToolTip="Which edge the sidebar will dock to." />

                    <Label Grid.Column="0" Grid.Row="1" Content="Screen" VerticalAlignment="Center" />
                    <ComboBox ItemsSource="{Binding Path=ScreenItems}" DisplayMemberPath="Text" SelectedValuePath="Index" SelectedValue="{Binding Path=ScreenIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" ToolTip="Which screen the sidebar will be on." />

                    <Label Grid.Column="0" Grid.Row="2" Content="Polling Interval" VerticalAlignment="Center" />
                    <DockPanel Grid.Column="1" Grid.Row="2" VerticalAlignment="Center">
                        <TextBox Text="{Binding ElementName=PollingIntervalSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" DockPanel.Dock="Right" Width="40" Margin="5,0,0,0" IsReadOnly="True" VerticalAlignment="Center" />
                        <Slider x:Name="PollingIntervalSlider" Value="{Binding Path=PollingInterval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="100" Maximum="5000" TickFrequency="100" TickPlacement="None" LargeChange="1000" IsSnapToTickEnabled="True" VerticalAlignment="Center" ToolTip="Time between polling for data in milliseconds." />
                    </DockPanel>

                    <Label Grid.Column="0" Grid.Row="3" Content="Use App Bar" VerticalAlignment="Center" />
                    <CheckBox IsChecked="{Binding Path=UseAppBar, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="3" Margin="0,6,0,0" VerticalAlignment="Center" ToolTip="Reserves space in the work area for the sidebar." />

                    <Label Grid.Column="0" Grid.Row="4" Content="Allow Click Through" VerticalAlignment="Center" />
                    <CheckBox IsChecked="{Binding Path=ClickThrough, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="4" Margin="0,6,0,0" VerticalAlignment="Center" ToolTip="Makes mouse events pass through the window." />

                    <Label Grid.Column="0" Grid.Row="5" Content="Always On Top" VerticalAlignment="Center" />
                    <CheckBox IsChecked="{Binding Path=AlwaysTop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="5" Margin="0,6,0,0" VerticalAlignment="Center" ToolTip="Makes the sidebar always on top of other windows." />

                    <Label Grid.Column="0" Grid.Row="6" Content="Check For Updates" VerticalAlignment="Center" />
                    <CheckBox IsChecked="{Binding Path=CheckForUpdates, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="6" Margin="0,6,0,0" VerticalAlignment="Center" ToolTip="Check for updates on program start up." />

                    <Label Grid.Column="0" Grid.Row="7" Content="Run at startup" VerticalAlignment="Center" />
                    <CheckBox IsChecked="{Binding Path=RunAtStartup, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="7" Margin="0,6,0,0" VerticalAlignment="Center" ToolTip="Runs the program when you first log in." />
                </Grid>
            </TabItem>
            <TabItem Header="Customize">
                <Grid Style="{StaticResource SettingGrid}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="38px"></RowDefinition>
                        <RowDefinition Height="38px"></RowDefinition>
                        <RowDefinition Height="38px"></RowDefinition>
                        <RowDefinition Height="38px"></RowDefinition>
                        <RowDefinition Height="38px"></RowDefinition>
                        <RowDefinition Height="Auto"></RowDefinition>
                    </Grid.RowDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Content="Sidebar Width" VerticalAlignment="Center" />
                    <DockPanel Grid.Column="1" Grid.Row="0" VerticalAlignment="Center">
                        <TextBox Text="{Binding ElementName=SidebarWidthSlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" DockPanel.Dock="Right" Width="40" Margin="5,0,0,0" IsReadOnly="True" VerticalAlignment="Center" />
                        <Slider x:Name="SidebarWidthSlider" Value="{Binding Path=SidebarWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="100" Maximum="300" TickFrequency="5" TickPlacement="None" LargeChange="100" IsSnapToTickEnabled="True" VerticalAlignment="Center" ToolTip="Width of the sidebar in pixels." />
                    </DockPanel>

                    <Label Grid.Column="0" Grid.Row="1" Content="Background Color" VerticalAlignment="Center" />
                    <TextBox Text="{Binding Path=BGColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" LostFocus="ColorTextBox_LostFocus" ToolTip="Color of the background as a hex code." />

                    <Label Grid.Column="0" Grid.Row="2" Content="Background Opacity" VerticalAlignment="Center" />
                    <DockPanel Grid.Column="1" Grid.Row="2" VerticalAlignment="Center">
                        <TextBox Text="{Binding ElementName=BGOpacitySlider, Path=Value, UpdateSourceTrigger=PropertyChanged}" DockPanel.Dock="Right" Width="40" Margin="5,0,0,0" IsReadOnly="True" VerticalAlignment="Center" />
                        <Slider x:Name="BGOpacitySlider" Value="{Binding Path=BGOpacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="1.0" LargeChange="0.1" TickPlacement="None" TickFrequency="0.05" IsSnapToTickEnabled="True" VerticalAlignment="Center" ToolTip="Opacity of the sidebar background." />
                    </DockPanel>

                    <Label Grid.Column="0" Grid.Row="3" Content="Font Size" VerticalAlignment="Center" />
                    <ComboBox ItemsSource="{Binding Path=FontSettingItems}" DisplayMemberPath="FontSize" SelectedValue="{Binding Path=FontSetting, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="3" VerticalAlignment="Center" ToolTip="Size of the text and icons in the sidebar." />
                    
                    <Label Grid.Column="0" Grid.Row="4" Content="Font Color" VerticalAlignment="Center" />
                    <TextBox Text="{Binding Path=FontColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="4" VerticalAlignment="Center" LostFocus="ColorTextBox_LostFocus" ToolTip="Color of the text and icons as a hex code." />

                    <Label Grid.Column="0" Grid.Row="5" Content="24 Hour Clock" VerticalAlignment="Center" />
                    <CheckBox IsChecked="{Binding Path=Clock24HR, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Grid.Row="5" Margin="0,6,0,0" VerticalAlignment="Center" ToolTip="Changes the time format to 24 hours." />
                </Grid>
            </TabItem>
            <TabItem Header="Monitors">
                <StackPanel Orientation="Vertical">
                    <Label Margin="0,0,0,15" Padding="0" Content="Click a row to edit its settings." />
                    <DataGrid ItemsSource="{Binding Path=MonitorConfig}"  AutoGenerateColumns="False" HeadersVisibility="Column" SelectionUnit="FullRow" SelectionMode="Single" GridLinesVisibility="None">
                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#e1e7e9" />
                        </DataGrid.Resources>
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="BorderThickness" Value="0" />
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Enabled">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        <Setter Property="Padding" Value="12,4" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type monitor:MonitorConfig}">
                                        <CheckBox IsChecked="{Binding Path=Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="Enables this monitor." />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Monitor" Width="*">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="Padding" Value="12,4" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type monitor:MonitorConfig}">
                                        <Label Content="{Binding Path=Name}" VerticalAlignment="Center" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="Order">
                                <DataGridTemplateColumn.HeaderStyle>
                                    <Style TargetType="{x:Type DataGridColumnHeader}">
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        <Setter Property="Padding" Value="12,4" />
                                    </Style>
                                </DataGridTemplateColumn.HeaderStyle>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="{x:Type monitor:MonitorConfig}">
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                            <StackPanel.Resources>
                                                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource AppButton}">
                                                    <Setter Property="Width" Value="14" />
                                                    <Setter Property="Height" Value="14" />
                                                    <Setter Property="Margin" Value="4,0" />
                                                </Style>
                                                <Style TargetType="{x:Type Path}">
                                                    <Setter Property="Width" Value="8" />
                                                    <Setter Property="Height" Value="8" />
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="Fill" Value="#666666" />
                                                    <Setter Property="Stretch" Value="Uniform" />
                                                </Style>
                                            </StackPanel.Resources>
                                            <Button Click="MonitorUp_Click">
                                                <Path Data="F1 M 37.8516,35.625L 34.6849,38.7917L 23.6016,50.2708L 23.6016,39.9792L 37.8516,24.9375L 52.1016,39.9792L 52.1016,50.2708L 41.0182,38.7917L 37.8516,35.625 Z" />
                                            </Button>
                                            <Button Click="MonitorDown_Click">
                                                <Path Data="F1 M 37.8516,39.5833L 52.1016,24.9375L 52.1016,35.2292L 37.8516,50.2708L 23.6016,35.2292L 23.6016,24.9375L 37.8516,39.5833 Z" />
                                            </Button>
                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <Border Background="#ecf0f1" Padding="35,6">
                                    <ItemsControl ItemsSource="{Binding Path=Params}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="{x:Type monitor:ConfigParam}">
                                                <ContentControl Content="{Binding}">
                                                    <ContentControl.Style>
                                                        <Style TargetType="{x:Type ContentControl}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Type}" Value="System.Boolean">
                                                                    <Setter Property="ContentTemplate" Value="{StaticResource MonitorConfigBool}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ContentControl.Style>
                                                </ContentControl>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Vertical" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Border>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>
                    </DataGrid>
                </StackPanel>
            </TabItem>
        </TabControl>
        <StackPanel Style="{StaticResource SettingButtons}">
            <Button Content="Save" Click="SaveButton_Click"></Button>
            <Button Content="Cancel" Click="CancelButton_Click"></Button>
        </StackPanel>
    </StackPanel>
</Window>
