<Application x:Class="SidebarDiagnostics.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:tb="http://www.hardcodet.net/taskbar"
             xmlns:local="clr-namespace:SidebarDiagnostics"
             xmlns:prop="clr-namespace:SidebarDiagnostics.Properties"
             xmlns:command="clr-namespace:SidebarDiagnostics.Commands"
             ShutdownMode="OnExplicitShutdown"
             StartupUri="AppBar.xaml">
    <Application.Resources>
        <command:ActivateCommand x:Key="ShowCommand" />
        
        <tb:TaskbarIcon x:Key="TrayIcon" IconSource="/Tray.ico" LeftClickCommand="{StaticResource ShowCommand}">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Settings" Click="Settings_Click" />
                    <MenuItem Header="Reload" Click="Reload_Click" />
                    <Separator />
                    <MenuItem Header="Visibility" SubmenuOpened="Visibility_SubmenuOpened">
                        <MenuItem Header="Show" Click="Show_Click" />
                        <MenuItem Header="Hide" Click="Hide_Click" />
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Donate" Click="Donate_Click" />
                    <MenuItem Header="Update" Click="Update_Click" />
                    <MenuItem Header="Close" Click="Close_Click" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>

        <Style x:Key="MenuBar" TargetType="{x:Type StackPanel}">
            <Setter Property="Margin" Value="10" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="Visibility" Value="Hidden" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static prop:Settings.Default}, Path=CollapseMenuBar, Mode=OneWay}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="IconButton" TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{Binding Source={x:Static prop:Settings.Default}, Path=FontColor, Mode=OneTime}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="{x:Type Path}">
                    <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
                    <Setter Property="Stretch" Value="Uniform" />
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="MenuButton" TargetType="{x:Type Button}" BasedOn="{StaticResource IconButton}">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Width" Value="14" />
            <Setter Property="Height" Value="14" />
            <Setter Property="Margin" Value="10,0,0,0" />
        </Style>

        <Style x:Key="AppIcon" TargetType="{x:Type Path}">
            <Setter Property="Width" Value="{Binding Source={x:Static prop:Settings.Default}, Path=FontSetting.IconSize, Mode=OneTime}" />
            <Setter Property="Height" Value="{Binding Source={x:Static prop:Settings.Default}, Path=FontSetting.IconSize, Mode=OneTime}" />
            <Setter Property="Margin" Value="0,0,10,0" />
            <Setter Property="Stretch" Value="Uniform" />
            <Setter Property="Fill" Value="{Binding Source={x:Static prop:Settings.Default}, Path=FontColor, Mode=OneTime}" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style x:Key="AppTitle" TargetType="{x:Type Label}">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{Binding Source={x:Static prop:Settings.Default}, Path=FontColor, Mode=OneTime}" />
            <Setter Property="FontSize" Value="{Binding Source={x:Static prop:Settings.Default}, Path=FontSetting.TitleFontSize, Mode=OneTime}" />
        </Style>

        <Style x:Key="AppText" TargetType="{x:Type TextBlock}">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{Binding Source={x:Static prop:Settings.Default}, Path=FontColor, Mode=OneTime}" />
            <Setter Property="FontSize" Value="{Binding Source={x:Static prop:Settings.Default}, Path=FontSetting.SmallFontSize, Mode=OneTime}" />
            <Setter Property="TextWrapping" Value="WrapWithOverflow" />
        </Style>

        <Style x:Key="ContentView" TargetType="ScrollViewer">
            <Setter Property="Margin" Value="5,15" />
            <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
            <Setter Property="VerticalScrollBarVisibility" Value="Hidden" />
        </Style>

        <Style x:Key="ContentPanel" TargetType="{x:Type StackPanel}">
            <Setter Property="Margin" Value="15,0" />
            <Setter Property="Orientation" Value="Vertical" />
            <Setter Property="VerticalAlignment" Value="Top" />
        </Style>

        <Style x:Key="VerticalPanel" TargetType="{x:Type StackPanel}">
            <Setter Property="Orientation" Value="Vertical" />
        </Style>

        <Style x:Key="GroupPanel" TargetType="{x:Type StackPanel}">
            <Setter Property="Orientation" Value="Vertical" />
            <Setter Property="Margin" Value="0,10" />
        </Style>

        <Style x:Key="MonitorPanel" TargetType="{x:Type StackPanel}">
            <Setter Property="Orientation" Value="Vertical" />
            <Setter Property="Margin" Value="0,10,0,0" />
        </Style>

        <Style x:Key="MonitorTitle" TargetType="{x:Type StackPanel}">
            <Setter Property="Orientation" Value="Horizontal" />
        </Style>

        <Style x:Key="HardwarePanel" TargetType="{x:Type StackPanel}">
            <Setter Property="Orientation" Value="Vertical" />
            <Setter Property="Margin" Value="0,10,0,0" />
        </Style>

        <Style x:Key="DataText" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="{Binding Source={x:Static prop:Settings.Default}, Path=FontColor, Mode=OneTime}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="FontSize" Value="{Binding Source={x:Static prop:Settings.Default}, Path=FontSetting.FontSize, Mode=OneTime}" />
            <Setter Property="TextWrapping" Value="WrapWithOverflow" />
        </Style>

        <Style x:Key="HardwareText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataText}">
            <Setter Property="Margin" Value="0,0,0,6" />
        </Style>
        
        <Style x:Key="SensorText" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource DataText}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=IsAlert, Mode=OneWay}" Value="True">
                    <Setter Property="Foreground" Value="{Binding Source={x:Static prop:Settings.Default}, Path=AlertFontColor, Mode=OneTime}" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DriveProgress" TargetType="{x:Type ProgressBar}">
            <Setter Property="Minimum" Value="0" />
            <Setter Property="Maximum" Value="100" />
            <Setter Property="Margin" Value="8,2,0,0" />
            <Setter Property="Width" Value="{Binding Source={x:Static prop:Settings.Default}, Path=FontSetting.BarWidth, Mode=OneTime}" />
            <Setter Property="Height" Value="{Binding Source={x:Static prop:Settings.Default}, Path=FontSetting.BarHeight, Mode=OneTime}" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Foreground" Value="{Binding Source={x:Static prop:Settings.Default}, Path=FontColor, Mode=OneTime}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Border Name="PART_Track" CornerRadius="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Foreground}" BorderThickness="1">
                            <Border Name="PART_Indicator" CornerRadius="2,0,0,2" Background="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding Background}" BorderThickness="1" HorizontalAlignment="Left" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=IsAlert, Mode=OneWay}" Value="True">
                                <Setter Property="Foreground" Value="{Binding Source={x:Static prop:Settings.Default}, Path=AlertFontColor, Mode=OneTime}" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SettingGrid" TargetType="{x:Type Grid}">
            <Style.Resources>
                <Style TargetType="{x:Type FrameworkElement}">
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
                <Style TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
                    <Setter Property="Margin" Value="0,5,15,0" />
                    <Setter Property="MinWidth" Value="60" />
                </Style>
                <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type FrameworkElement}}" />
                <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type FrameworkElement}}" />
                <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
                    <Setter Property="Margin" Value="0,6,0,0" />
                </Style>
                <Style TargetType="{x:Type DockPanel}" BasedOn="{StaticResource {x:Type FrameworkElement}}">
                    <Style.Resources>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="DockPanel.Dock" Value="Right" />
                            <Setter Property="Width" Value="40" />
                            <Setter Property="Margin" Value="5,0,0,0" />
                            <Setter Property="IsReadOnly" Value="True" />
                        </Style>
                        <Style TargetType="{x:Type Slider}">
                            <Setter Property="DockPanel.Dock" Value="Left" />
                            <Setter Property="TickPlacement" Value="None" />
                            <Setter Property="IsSnapToTickEnabled" Value="True" />
                        </Style>
                    </Style.Resources>
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="SettingButtons" TargetType="{x:Type StackPanel}">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Orientation" Value="Horizontal" />
            <Setter Property="Margin" Value="10,0,10,10" />
            <Style.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Margin" Value="10,0,0,0" />
                    <Setter Property="Padding" Value="16,6" />
                </Style>
            </Style.Resources>
        </Style>

        <Style x:Key="HotkeyToggle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Content" Value="Bind" />
            <Setter Property="Height" Value="22" />
        </Style>

        <Style x:Key="HotkeyLabel" TargetType="{x:Type TextBox}">
            <Setter Property="Height" Value="22" />
            <Setter Property="Padding" Value="5,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <Style x:Key="ScrollBarTrackThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="CornerScrollBarRectangle" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Margin="0,1,0,1" Background="{TemplateBinding Background}" Opacity="0.6" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="CornerScrollBarRectangle" Property="Width" Value="Auto" />
                                <Setter TargetName="CornerScrollBarRectangle" Property="Height" Value="6" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CornerScrollBarRectangle" Property="Opacity" Value="0.8" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="{Binding Source={x:Static prop:Settings.Default}, Path=FontColor, Mode=OneTime}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="7" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="7" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollBarTrackThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>